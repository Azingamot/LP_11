@page "/home"
@using Utils;
@using Microsoft.EntityFrameworkCore;
@inject NavigationManager nav;
@inject ICookie cookie;
@rendermode InteractiveServer

<PageTitle>Главная</PageTitle>

<LayoutView Layout="typeof(Views.Header)"></LayoutView>

<div class="main-container">
	<div class="container">
		<h1 style="display: flex; justify-content: center; width: 100%;">Главная</h1>
	</div>
	<div class="container">
		<h3 style="text-align: center">Добро пожаловать в систему учета данных компании ООО "ЗВЕЗДА"</h3>
	</div>
	<div class="container">
		<div style="width: 100%; display: flex; justify-content: center; align-items: center; flex-direction: column; gap: 10px">
			<p>Пользователь: @fullname</p>
			<p>Роль: @roleName</p>
			<p>Время захода: @enterTime.ToShortTimeString()</p>
		</div>
	</div>
</div>

@code {
	public string id { get; set; } = "";
	public string fullname { get; set; } = "";
	public string roleName { get; set; } = "";
	public DateTime enterTime { get; set; }

	protected override async void OnInitialized()
	{
		id = await cookie.GetValue("key");
		CheckUser();
	}

	private async void CheckUser()
	{
		try
		{
			if (string.IsNullOrEmpty(id)) nav.NavigateTo("/", true, true);

			UserSession? session = Database.Context.UserSessions.Where(u => u.User.Id == int.Parse(Encryptor.Decrypt(id))).Include(u => u.User)
			.Include(u => u.User.Role).FirstOrDefault();

			if (session == null) return;

			fullname = session.User.Login;
			roleName = session.User.Role.Name;
			enterTime = session.LoginTime;
			await InvokeAsync(StateHasChanged);
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.ToString());
		}
	}
}

